name: CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.22.5
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.5

      - name: Build
        run: go build -o go-web-app
        working-directory: ./go-web-app-main

      - name: Test
        run: go test ./...
        working-directory: ./go-web-app-main

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.22.5
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.5

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.56.2
          working-directory: ./go-web-app-main
          install-mode: binary
          github-token: ${{ secrets.GITHUB_TOKEN }}
          verify: true
          only-new-issues: false
          skip-cache: false
          skip-save-cache: false
          problem-matchers: false
          cache-invalidation-interval: 7

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./go-web-app-main
          file: ./go-web-app-main/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{ github.run_id }}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}

      - name: Update tag in Helm chart
        run: |
          sed -i 's/tag: .*/tag: "${{ github.run_id }}"/' go-web-app-devops-main/helm/go-web-app-chart/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "shailajarowthu@gmail.com"
          git config --global user.name "shailaja rowthu"
          git add go-web-app-devops-main/helm/go-web-app-chart/values.yaml
          git commit -m "Update tag in Helm chart"
          git push origin main
